@page "/planning-sessions"

@using Grafik.Components.Dialogs
@using Grafik.Components.Dialogs.PlanningSessionList
@using Grafik.Data
@using Microsoft.EntityFrameworkCore

@rendermode InteractiveServer

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

@code {
    RadzenDataGrid<PlanningSession>? dataGrid;
    IQueryable<PlanningSession>? planningSessions;
    IList<PlanningSession> selectedPlanningSessions = new List<PlanningSession>();

    protected override async Task OnInitializedAsync()
    {
        planningSessions = DbContext.PlanningSessions;

        await base.OnInitializedAsync();
    }

    private void OpenAddDialog()
    {
        DialogService.OnClose += OnDialogClose;
        DialogService.Open<AddPlanningSessionDialog>("Utwórz sesję planowania");
    }

    private void OpenDeleteDialog(PlanningSession planningSession)
    {
        DialogService.OnClose += OnDialogClose;
        DialogService.Open<DeletePlanningSessionDialog>(
            "Usuń sesję planowania",
            new Dictionary<string, object>{
                { "PlanningSession", planningSession }
            });
    }

    private void OpenEditDialog(PlanningSession planningSession)
    {
        DialogService.OnClose += OnDialogClose;
        DialogService.Open<EditPlanningSessionDialog>(
            "Edytuj sesję planowania", 
            new Dictionary<string, object>{
                { "PlanningSession", planningSession }
            });
    }

    private void NavigateToPlanningSessionDetails(PlanningSession planningSession)
    {
        NavigationManager.NavigateTo($"/planning-sessions/{planningSession.Id}");
    }

    private void OnDialogClose(dynamic args) {
        dataGrid!.Reload();
        DialogService.OnClose -= (args) => { };
    }

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked", Detail = text });
    }
}

<h3>Sesje Planingowe</h3>

<RadzenDataGrid AllowFiltering="true"
                AllowColumnResize="false"
                AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced"
                AllowSorting="true"
                PageSize="25"
                AllowPaging="true"
                PagerHorizontalAlign="HorizontalAlign.Justify"
                ShowPagingSummary="true"
                Data="@planningSessions"
                ColumnWidth="300px"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                SelectionMode="DataGridSelectionMode.Single"
                @bind-Value=@selectedPlanningSessions
                @ref="dataGrid">
    <Columns>
        <RadzenDataGridColumn Property="@nameof(PlanningSession.From)" FormatString="{0:d}" Filterable="true" Title="Od" Frozen="true" Width="80px" TextAlign="TextAlign.Left" />
        <RadzenDataGridColumn Property="@nameof(PlanningSession.To)" FormatString="{0:d}" Filterable="true" Title="Do" Frozen="true" Width="80px" TextAlign="TextAlign.Left" />
        <RadzenDataGridColumn Property="@nameof(PlanningSession.Comment)" Filterable="true" Title="Komentarz" Frozen="true" Width="80px" TextAlign="TextAlign.Left" />
        <RadzenDataGridColumn Context="planningSession" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="52px">
            <Template Context="planningSession">
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
                    <RadzenButton Icon="event"
                                  ButtonStyle="ButtonStyle.Light"
                                  Variant="Variant.Flat"
                                  Size="ButtonSize.Medium"
                                  Click="@(args => NavigateToPlanningSessionDetails(planningSession))"
                                  @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton Icon="edit"
                                  ButtonStyle="ButtonStyle.Light"
                                  Variant="Variant.Flat"
                                  Size="ButtonSize.Medium"
                                  Click="@(args => OpenEditDialog(planningSession))"
                                  @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton Icon="delete"
                                  ButtonStyle="ButtonStyle.Light"
                                  Variant="Variant.Flat"
                                  Size="ButtonSize.Medium"
                                  Click="@(args => OpenDeleteDialog(planningSession))"
                                  @onclick:stopPropagation="true">
                    </RadzenButton>
                </RadzenStack>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<br />

<RadzenButton Click=@(args => OpenAddDialog())
              Text="Utwórz"
              Icon="add_circle"
              ButtonStyle="ButtonStyle.Primary" />
